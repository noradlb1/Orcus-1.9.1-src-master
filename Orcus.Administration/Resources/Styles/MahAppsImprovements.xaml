<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">
    <Style x:Key="ColoredMetroProgressBar" TargetType="controls:MetroProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush2}" />
    </Style>
    <Style BasedOn="{StaticResource ColoredMetroProgressBar}" TargetType="controls:MetroProgressBar" />

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="6,2,6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid Margin="0,6,0,4" SnapsToDevicePixels="true">
                        <Rectangle
                            Height="1"
                            Margin="20,0,1,0"
                            Fill="{DynamicResource MenuSeparatorBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MetroListBox"
        BasedOn="{StaticResource MetroListBox}"
        TargetType="ListBox">
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderBrush}" />
    </Style>
    <Style
        x:Key="MetroListView"
        BasedOn="{StaticResource MetroListView}"
        TargetType="ListView">
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderBrush}" />
    </Style>

    <Style BasedOn="{StaticResource MetroListView}" TargetType="ListView" />

    <Style BasedOn="{StaticResource MetroListBox}" TargetType="ListBox" />

    <ControlTemplate x:Key="ArrowTopLevelHeaderTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle
                x:Name="Bg"
                Margin="1"
                Fill="{TemplateBinding Background}"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="1" />
            <StackPanel Orientation="Horizontal">
                <Button Command="{TemplateBinding Command}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            x:Name="Icon"
                            Margin="4,0,6,0"
                            VerticalAlignment="Center"
                            ContentSource="Icon"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path
                            x:Name="GlyphPanel"
                            Margin="8,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource Checkmark}"
                            Fill="{DynamicResource CheckmarkFill}"
                            FlowDirection="LeftToRight"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            ContentSource="Header"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                </Button>
                <Path
                    Margin="0,0,5,0"
                    VerticalAlignment="Center"
                    Data="{StaticResource DownArrow}"
                    Fill="{DynamicResource RightArrowFill}" />
            </StackPanel>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="True"
                Focusable="False"
                HorizontalOffset="1"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                VerticalOffset="-1">
                <Grid>
                    <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Background}" />
                    <ContentControl
                        x:Name="SubMenuBorder"
                        IsTabStop="False"
                        Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                         TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer
                            x:Name="SubMenuScrollViewer"
                            CanContentScroll="True"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                          TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                Margin="0"
                                Grid.IsSharedSizeScope="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.TabNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </ContentControl>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="4"
                            Direction="315"
                            Opacity="0.3"
                            ShadowDepth="2"
                            Color="{DynamicResource MenuShadowColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="LayoutRoot" Property="Margin" Value="0,0,6,6" />
                <Setter TargetName="SubMenuBorder" Property="Margin" Value="0,0,6,6" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource TopMenuItemSelectionStroke}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource TopMenuItemPressedFill}" />
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource TopMenuItemPressedStroke}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource TopMenuItemPressedFill}" />
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource TopMenuItemPressedStroke}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledMenuItemForeground}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource DisabledMenuItemGlyphPanel}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MetroCheckBoxRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="18" />
                            <ColumnDefinition x:Name="RightCol" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Margin="-6,0" Fill="{DynamicResource TransparentWhiteBrush}" />
                            <Border
                                x:Name="normal"
                                Width="18"
                                Height="18"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Path
                                x:Name="checkBox"
                                Width="12"
                                Height="10"
                                Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                Fill="{DynamicResource HighlightBrush}"
                                Opacity="0"
                                Stretch="Fill"
                                UseLayoutRounding="False" />
                            <Rectangle
                                x:Name="IndeterminateCheck"
                                Width="8"
                                Height="3"
                                Fill="{DynamicResource GrayBrush3}"
                                Opacity="0" />
                            <Border
                                x:Name="disabled"
                                Width="18"
                                Height="18"
                                Background="{DynamicResource SemiTransparentWhiteBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To=".55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkBox"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateCheck"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="checkBox" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="0,0,6,0" />
                            <Setter TargetName="LeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
                            <Setter TargetName="RightCol" Property="Width" Value="18" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>