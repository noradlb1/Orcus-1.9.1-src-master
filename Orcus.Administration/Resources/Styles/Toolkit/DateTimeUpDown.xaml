<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Style x:Key="MetroDateTimeUpDown" TargetType="xctk:DateTimeUpDown">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="controls:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinWidth" Value="62" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xctk:DateTimeUpDown">
                    <xctk:ButtonSpinner x:Name="PART_Spinner"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        AllowSpin="{TemplateBinding AllowSpin}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                        IsTabStop="False"
                                        Padding="0"
                                        ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                        <TextBox x:Name="PART_TextBox"
                                 MinWidth="20"
                                 VerticalAlignment="Center"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 AcceptsReturn="False"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 ContextMenu="{TemplateBinding ContextMenu}"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontSize="{TemplateBinding FontSize}"
                                 FontStretch="{TemplateBinding FontStretch}"
                                 FontStyle="{TemplateBinding FontStyle}"
                                 FontWeight="{TemplateBinding FontWeight}"
                                 Foreground="{TemplateBinding Foreground}"
                                 IsTabStop="{TemplateBinding IsTabStop}"
                                 IsUndoEnabled="{Binding IsUndoEnabled,
                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                 Padding="0"
                                 TabIndex="{TemplateBinding TabIndex}"
                                 Text="{Binding Text,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                                 TextAlignment="{TemplateBinding TextAlignment}"
                                 TextWrapping="NoWrap">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
                                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
                                    <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                    <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </xctk:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MetroDateTimeUpDown}" TargetType="xctk:DateTimeUpDown" />
</ResourceDictionary>