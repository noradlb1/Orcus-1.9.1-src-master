<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:editors="clr-namespace:Orcus.Administration.Controls.PropertyGrid.Editors">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ComboBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="editors:ExpandableTextBox">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="20" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="editors:ExpandableTextBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ToggleButtonColumn" Width="30" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               StaysOpen="False">
                            <Grid Width="{Binding DropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding DropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder"
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        Background="{DynamicResource WhiteBrush}"
                                        BorderBrush="{DynamicResource BlackBrush}"
                                        BorderThickness="1"
                                        Effect="{DynamicResource DropShadowBrush}" />
                                <Border BorderBrush="{DynamicResource ComboBoxPopupBrush}" BorderThickness="1">
                                    <TextBox HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             AcceptsReturn="True"
                                             AcceptsTab="True"
                                             BorderThickness="0"
                                             HorizontalScrollBarVisibility="Visible"
                                             Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                            Path=Text,
                                                            Mode=TwoWay,
                                                            UpdateSourceTrigger=PropertyChanged}"
                                             VerticalScrollBarVisibility="Visible" />
                                </Border>
                            </Grid>
                        </Popup>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Grid.Column="0"
                                 Margin="1"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 controls:TextBoxHelper.ButtonContent="{TemplateBinding controls:TextBoxHelper.ButtonContent}"
                                 controls:TextBoxHelper.ButtonFontFamily="{TemplateBinding controls:TextBoxHelper.ButtonFontFamily}"
                                 controls:TextBoxHelper.HasText="{TemplateBinding controls:TextBoxHelper.HasText}"
                                 controls:TextBoxHelper.UseFloatingWatermark="{TemplateBinding controls:TextBoxHelper.UseFloatingWatermark}"
                                 controls:TextBoxHelper.Watermark="{TemplateBinding controls:TextBoxHelper.Watermark}"
                                 Background="{x:Null}"
                                 BorderThickness="0"
                                 CharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                           Path=(controls:ComboBoxHelper.CharacterCasing),
                                                           Mode=OneWay}"
                                 Focusable="True"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontSize="{TemplateBinding FontSize}"
                                 Foreground="{TemplateBinding Foreground}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                     Path=(controls:ComboBoxHelper.MaxLength),
                                                     Mode=OneWay}"
                                 Padding="{TemplateBinding Padding}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 Style="{StaticResource EditableTextBoxStyle}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                Path=Text,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}" />
                        <ToggleButton x:Name="PART_DropDownToggle"
                                      Grid.Column="1"
                                      MinHeight="15"
                                      Background="{StaticResource WhiteBrush}"
                                      BorderThickness="0"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{Binding IsReadOnly,
                                                          RelativeSource={RelativeSource TemplatedParent},
                                                          Converter={StaticResource InverseBoolConverter}}"
                                      IsHitTestVisible="{Binding IsDropDownOpen,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource InverseBoolConverter}}"
                                      Style="{StaticResource MetroToggleButton}">
                            <Grid x:Name="Root">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverPath" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Blur" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard />
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path Width="10"
                                      Height="6"
                                      Margin="0.5,0,0.5,0"
                                      Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                                      Fill="{DynamicResource GrayBrush1}"
                                      Stretch="Uniform" />
                                <Path x:Name="HoverPath"
                                      Width="10"
                                      Height="6"
                                      Margin="0.5,0,0.5,0"
                                      Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                                      Fill="{DynamicResource BlackBrush}"
                                      Opacity="0"
                                      Stretch="Uniform"
                                      UseLayoutRounding="False" />
                                <Path x:Name="Blur"
                                      Width="10"
                                      Height="6"
                                      Margin="0.5,0,0.5,0"
                                      Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                                      Fill="{DynamicResource BlackBrush}"
                                      Opacity="0"
                                      Stretch="Uniform"
                                      UseLayoutRounding="False">
                                    <Path.Effect>
                                        <BlurEffect />
                                    </Path.Effect>
                                </Path>
                                <Rectangle x:Name="DisabledElement"
                                           Fill="{DynamicResource WhiteBrush}"
                                           Opacity="0"
                                           RadiusX="2"
                                           RadiusY="2" />
                            </Grid>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>