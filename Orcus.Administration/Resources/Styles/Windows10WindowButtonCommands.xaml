<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:core="clr-namespace:Orcus.Administration.Core;assembly=Orcus.Administration.Core">
    <ControlTemplate x:Key="Windows10WindowButtonCommandsTemplate" TargetType="{x:Type controls:WindowButtonCommands}">
        <StackPanel Orientation="Horizontal">
            <Button x:Name="PART_Min"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding IsMinButtonEnabled,
                                        RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}}"
                    UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
                        <Binding Mode="OneWay"
                                 Path="ShowMinButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                        <Binding Mode="OneWay"
                                 Path="ResizeMode"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <Path Width="10"
                      Height="10"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,40 L96,40 96,48 0,48 0,40z"
                      Fill="{Binding Path=Foreground,
                                     RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      RenderOptions.EdgeMode="Aliased"
                      SnapsToDevicePixels="True"
                      Stretch="Uniform" />
            </Button>
            <Button x:Name="PART_Max"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding IsMaxRestoreButtonEnabled,
                                        RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}}"
                    UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
                        <Binding Mode="OneWay"
                                 Path="ShowMaxRestoreButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                        <Binding Mode="OneWay"
                                 Path="ResizeMode"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <!--  normal state  -->
                <Canvas Width="12"
                        Height="12"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <Path x:Name="PART_MaxPath"
                          Data="M2,2 2,10 10,10 10,2 2,2Z M1,11 1,1 11,1 11,11 1,11Z"
                          Fill="{Binding Path=Foreground,
                                         RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          RenderOptions.EdgeMode="Aliased"
                          SnapsToDevicePixels="True"
                          Stretch="Uniform" />
                </Canvas>
            </Button>
            <Button x:Name="PART_Close"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding IsCloseButtonEnabled,
                                        RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}}"
                    UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
                        <Binding Mode="OneWay"
                                 Path="ShowCloseButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type controls:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <Grid>
                    <Line HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stroke="{Binding Path=Foreground,
                                           RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          X1="0"
                          X2="10"
                          Y1="0"
                          Y2="10" />
                    <Line HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stroke="{Binding Path=Foreground,
                                           RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          X1="0"
                          X2="10"
                          Y1="10"
                          Y2="0" />
                </Grid>
            </Button>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}, Path=WindowState}" Value="Maximized">
                <Setter TargetName="PART_MaxPath" Property="Data" Value="M10,9 9,9 9,3 3,3 3,2 10,2 10,9Z M8,11 1,11 1,4 8,4 8,11Z M2,1 2,3 0,3 0,12 9,12 9,10 11,10 11,1 2,1Z" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="WindowCommandsTransparentBrush"
                     Opacity=".8"
                     Color="{DynamicResource WindowButtonColor}" />
    <SolidColorBrush x:Key="WindowCommandsBrush" Color="{DynamicResource WindowButtonColor}" />

    <Style x:Key="MetroWindowButtonStyleAnimated" TargetType="Button">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MaxHeight" Value="34" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="PART_Background"
                              Background="{StaticResource WindowCommandsTransparentBrush}"
                              Opacity="0" />
                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                    Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   Opacity="0.6"
                                                   Padding="{TemplateBinding Padding}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                         Storyboard.TargetName="PART_Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                         Storyboard.TargetName="PART_Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{StaticResource WindowCommandsBrush}" />
                            <Setter TargetName="PART_Background" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroWindowButtonStyleAnimatedDark"
           BasedOn="{StaticResource MetroWindowButtonStyleAnimated}"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="PART_Background"
                              Background="{StaticResource WhiteBrush}"
                              Opacity=".6" />
                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                    Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   Opacity="0.6"
                                                   Padding="{TemplateBinding Padding}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                        To="#3c3c3c" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource WhiteColor}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroWindowCloseButtonStyleAnimated"
           BasedOn="{StaticResource MetroWindowButtonStyleAnimated}"
           TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="PART_Background"
                              Background="{StaticResource WhiteBrush}"
                              Opacity="1" />
                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                    Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   Opacity="0.6"
                                                   Padding="{TemplateBinding Padding}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                        To="#EB2F2F" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource WhiteColor}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="White" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource BlackColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Windows10WindowButtonCommands" TargetType="{x:Type controls:WindowButtonCommands}">
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource MetroWindowCloseButtonStyleAnimated}" />
        <Setter Property="DarkMaxButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="DarkMinButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Theme" Value="Light" />
        <Setter Property="LightCloseButtonStyle" Value="{DynamicResource MetroWindowCloseButtonStyleAnimated}" />
        <Setter Property="LightMaxButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="LightMinButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="Template" Value="{StaticResource Windows10WindowButtonCommandsTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>