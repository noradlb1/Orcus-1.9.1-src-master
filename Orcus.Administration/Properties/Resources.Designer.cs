//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orcus.Administration.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Orcus.Administration.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///color 6
        ///Title Orcus Batch Execution
        ///
        ///set something=World
        ///echo Hello %something%
        ///
        ///pause.
        /// </summary>
        internal static string BatchSample {
            get {
                return ResourceManager.GetString("BatchSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;SyntaxDefinition name=&quot;Batch&quot;
        ///        xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; /&gt;
        ///    &lt;Color name=&quot;String&quot; foreground=&quot;Blue&quot; /&gt;
        ///	&lt;Color name=&quot;SpecialLine&quot; foreground=&quot;Red&quot; background=&quot;Yellow&quot; /&gt;
        ///	&lt;Color name=&quot;Variable&quot; foreground=&quot;Orange&quot; /&gt;
        ///	&lt;Color name=&quot;Operator&quot; foreground=&quot;Red&quot; /&gt;
        ///	&lt;Color name=&quot;Keyword&quot; foreground=&quot;#44a0de&quot; fontWeight=&quot;bold&quot; /&gt;
        ///	
        ///    &lt;!-- This is the main ruleset. --&gt;
        ///    &lt;RuleSet ignoreCase=&quot;true&quot;&gt;
        ///		&lt;Ru [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BatchSyntax {
            get {
                return ResourceManager.GetString("BatchSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;C#&quot; extensions=&quot;.cs&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///	&lt;!-- The named colors &apos;Comment&apos; and &apos;String&apos; are used in SharpDevelop to detect if a line is inside a multiline string/comment --&gt;
        ///	&lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; exampleText=&quot;// comment&quot; /&gt;
        ///	&lt;Color name=&quot;String&quot; foreground=&quot;#e67e22&quot; exampleText=&quot;string text = &amp;quot;Hello, World!&amp;quot;&quot;/&gt;
        ///	&lt;Color name=&quot;Char&quot; foreground=&quot;Magenta&quot; exampleText=&quot;char linefeed = &apos;\ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CSharpSyntax {
            get {
                return ResourceManager.GetString("CSharpSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;SyntaxDefinition name=&quot;ExportValueSyntax&quot;
        ///        xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;!-- This is the main ruleset. --&gt;
        ///    &lt;RuleSet ignoreCase=&quot;true&quot;&gt;
        ///        &lt;Keywords fontWeight=&quot;bold&quot; foreground=&quot;#e67e22&quot;&gt;
        ///		[KEYWORDS]
        ///        &lt;/Keywords&gt;
        ///        &lt;Keywords fontWeight=&quot;bold&quot; foreground=&quot;#e74c3c&quot;&gt;
        ///            &lt;Word&gt;Auto_Increment&lt;/Word&gt;
        ///        &lt;/Keywords&gt;
        ///    &lt;/RuleSet&gt;
        ///&lt;/SyntaxDefinition&gt;.
        /// </summary>
        internal static string ExportValueSyntax {
            get {
                return ResourceManager.GetString("ExportValueSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///
        ///&lt;!-- Syntaxdefinition for VB.NET, v0.1 Rev 1 by Christian Holm --&gt;
        ///&lt;!-- Updated 2005 by Daniel Grunwald for VB.NET 2.0 --&gt;
        ///&lt;!-- Converted to AvalonEdit format by Daniel Grunwald in 2010 --&gt;
        ///&lt;!-- Updated 2010 by Siegfried Oleg Pammer for VB.NET 9 and 10 --&gt;
        ///&lt;!-- Updated 2011 by Siegfried Oleg Pammer for VB 11 CTP --&gt;
        ///&lt;SyntaxDefinition name=&quot;VB&quot; extensions=&quot;.vb&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///	&lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; exampleTe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VisualBasicSyntax {
            get {
                return ResourceManager.GetString("VisualBasicSyntax", resourceCulture);
            }
        }
    }
}
