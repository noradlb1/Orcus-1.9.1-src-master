<UserControl x:Class="Orcus.Administration.Views.CommandViews.EventLogCommandView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converter="clr-namespace:Orcus.Administration.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:eventLog="clr-namespace:Orcus.Shared.Commands.EventLog;assembly=Orcus.Shared"
             xmlns:extensions="clr-namespace:Orcus.Administration.Extensions"
             xmlns:listViewLayoutManager="clr-namespace:Sorzus.Wpf.Toolkit.ListViewLayoutManager;assembly=Sorzus.Wpf.Toolkit"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:commandViewModels="clr-namespace:Orcus.Administration.ViewModels.CommandViewModels;assembly=Orcus.Administration.ViewModels"
             d:DataContext="{d:DesignInstance commandViewModels:EventLogViewModel}"
             d:DesignHeight="420"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"
                               MinHeight="200"
                               MaxHeight="500" />
                <RowDefinition Height="1" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ListView x:Name="EventLogListView"
                      listViewLayoutManager:ListViewLayoutManager.Enabled="True"
                      BorderThickness="0"
                      ItemsSource="{Binding EventLogEntries}"
                      ScrollViewer.IsDeferredScrollingEnabled="False"
                      SelectionMode="Single"
                      Style="{StaticResource VirtualisedMetroListView}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="120"
                                        listViewLayoutManager:FixedColumn.Width="120"
                                        Header="{DynamicResource Type}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type eventLog:EventLogEntry}">
                                    <StackPanel Orientation="Horizontal">
                                        <Viewbox Width="16" Height="16">
                                            <ContentControl>
                                                <ContentControl.Style>
                                                    <Style TargetType="ContentControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding EntryType}" Value="{x:Static eventLog:EventLogEntryType.Error}">
                                                                <Setter Property="Content" Value="{StaticResource VectorError}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding EntryType}" Value="{x:Static eventLog:EventLogEntryType.Warning}">
                                                                <Setter Property="Content" Value="{StaticResource VectorWarning}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding EntryType}" Value="{x:Static eventLog:EventLogEntryType.Information}">
                                                                <Setter Property="Content" Value="{StaticResource VectorInformation}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding EntryType}" Value="{x:Static eventLog:EventLogEntryType.SuccessAudit}">
                                                                <Setter Property="Content" Value="{StaticResource VectorInformation}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding EntryType}" Value="{x:Static eventLog:EventLogEntryType.FailureAudit}">
                                                                <Setter Property="Content" Value="{StaticResource VectorError}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                        </Viewbox>
                                        <TextBlock Margin="10,0,0,0"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding EntryType}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="150"
                                        listViewLayoutManager:FixedColumn.Width="100"
                                        DisplayMemberBinding="{Binding Timestamp,
                                                                       Converter={StaticResource DateTimeToStringConverter},
                                                                       ConverterParameter={x:Static converter:DateTimeFormat.GeneralLong}}"
                                        Header="{DynamicResource DateAndTime}" />
                        <GridViewColumn listViewLayoutManager:ProportionalColumn.Width="1"
                                        DisplayMemberBinding="{Binding Source}"
                                        Header="{DynamicResource Source}" />
                        <GridViewColumn Width="100"
                                        listViewLayoutManager:FixedColumn.Width="100"
                                        DisplayMemberBinding="{Binding EventId}"
                                        Header="{DynamicResource EventId}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <GridSplitter Grid.Row="1"
                          Margin="0,-2"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="{StaticResource GridSplitterBrush}"
                          BorderBrush="Transparent"
                          BorderThickness="0,2"
                          Canvas.ZIndex="100"
                          ResizeDirection="Rows"
                          SnapsToDevicePixels="True" />
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Visible">
                <TextBox Margin="5"
                         BorderThickness="0"
                         IsReadOnly="True"
                         Text="{Binding ElementName=EventLogListView,
                                        Path=SelectedItem.Message}"
                         TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Hidden" />
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="1" Background="{StaticResource GrayBrush10}">
            <StackPanel Margin="10"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                <RadioButton x:Name="SystemEventLogRadioButton"
                             Content="{DynamicResource SystemEventLog}"
                             IsChecked="True" />
                <RadioButton x:Name="ApplicationEventLogRadioButton"
                             Margin="10,0"
                             Content="{DynamicResource ApplicationEventLog}" />
                <RadioButton x:Name="SecurityEventLogRadioButton">
                    <RadioButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="14"
                                   Height="14"
                                   Source="{x:Static extensions:SystemImages.UacIcon}" />
                            <TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource SecurityEventLog}" />
                        </StackPanel>
                    </RadioButton.Content>
                </RadioButton>
                <Button MinWidth="65"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Right"
                        Command="{Binding RefreshEventLogCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MetroButton}" TargetType="Button">
                            <Setter Property="Content" Value="{DynamicResource Refresh}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SystemEventLogRadioButton, Path=IsChecked}" Value="true">
                                    <Setter Property="CommandParameter" Value="{x:Static eventLog:EventLogType.System}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=ApplicationEventLogRadioButton, Path=IsChecked}" Value="true">
                                    <Setter Property="CommandParameter" Value="{x:Static eventLog:EventLogType.Application}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=SecurityEventLogRadioButton, Path=IsChecked}" Value="true">
                                    <Setter Property="CommandParameter" Value="{x:Static eventLog:EventLogType.Security}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=SystemEventLogRadioButton, Path=IsChecked}" Value="true" />
                                        <Condition Binding="{Binding LoadedEventLog}" Value="{x:Static eventLog:EventLogType.System}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Content" Value="{DynamicResource LoadMoreEntries}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=ApplicationEventLogRadioButton, Path=IsChecked}" Value="true" />
                                        <Condition Binding="{Binding LoadedEventLog}" Value="{x:Static eventLog:EventLogType.Application}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Content" Value="{DynamicResource LoadMoreEntries}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=SecurityEventLogRadioButton, Path=IsChecked}" Value="true" />
                                        <Condition Binding="{Binding LoadedEventLog}" Value="{x:Static eventLog:EventLogType.Security}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Content" Value="{DynamicResource LoadMoreEntries}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>