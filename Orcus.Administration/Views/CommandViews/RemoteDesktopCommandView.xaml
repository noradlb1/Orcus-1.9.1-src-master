<UserControl
    x:Class="Orcus.Administration.Views.CommandViews.RemoteDesktopCommandView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commandViewModels="clr-namespace:Orcus.Administration.ViewModels.CommandViewModels;assembly=Orcus.Administration.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Orcus.Administration.Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:Orcus.Shared.Commands.RemoteDesktop;assembly=Orcus.Shared"
    d:DataContext="{d:DesignInstance commandViewModels:RemoteDesktopViewModel}"
    d:DesignHeight="420"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <extensions:ComboBoxDataTemplateSelector x:Key="ComboBoxItemTemplateChooser" />

        <Style
            x:Key="ScreensComboBox"
            BasedOn="{StaticResource MetroComboBox}"
            TargetType="ComboBox">
            <Setter Property="ItemsSource" Value="{Binding Screens}" />
            <Setter Property="SelectedItem" Value="{Binding SelectedScreen}" />
            <Setter Property="ItemTemplateSelector" Value="{StaticResource ComboBoxItemTemplateChooser}" />
            <Setter Property="extensions:ComboBoxDataTemplateSelector.SelectedTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type shared:ScreenInfo}">
                        <TextBlock>
                            <Run Text="{Binding Name, Mode=OneWay}" />
                            <Run Text="(" /><Run Text="{Binding Width, Mode=OneWay}" />
                            <Run Text="x" />
                            <Run Text="{Binding Height, Mode=OneWay}" /><Run Text=")" />
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="extensions:ComboBoxDataTemplateSelector.DropDownTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type shared:ScreenInfo}">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <ContentPresenter Content="{StaticResource Monitor32Icon}" />
                                <TextBlock
                                    Margin="0,7,0,0"
                                    HorizontalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{StaticResource BlackBrush}"
                                    Text="{Binding Number}" />
                            </Grid>
                            <StackPanel Margin="5,0,0,0" Orientation="Vertical">
                                <TextBlock FontWeight="Bold" Text="{Binding Name}" />
                                <TextBlock Margin="0,2,0,0">
                                    <Run Text="{Binding Width, Mode=OneWay}" />
                                    <Run Text="x" />
                                    <Run Text="{Binding Height, Mode=OneWay}" />
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Vertical">
                <StackPanel IsEnabled="{Binding IsCoreInformationAvailable}" Orientation="Horizontal">
                    <Button
                        VerticalAlignment="Center"
                        Command="{Binding InitializeRemoteDesktopCommand}"
                        Content="{StaticResource StartRemoteDesktop}" />
                    <Button
                        Margin="5,0,0,0"
                        Padding="5,0"
                        VerticalAlignment="Center"
                        Command="{Binding OpenOptionsCommand}"
                        Content="{StaticResource SettingsIcon}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <Image
            x:Name="DesktopImage"
            FocusVisualStyle="{x:Null}"
            Focusable="True"
            PreviewMouseDown="DesktopImageOnMouseDown"
            PreviewMouseMove="DesktopImageOnMouseMove"
            PreviewMouseUp="DesktopImageOnMouseUp"
            PreviewMouseWheel="DesktopImageOnMouseWheel"
            Source="{Binding WriteableBitmap}">
            <Image.Resources>
                <ContextMenu x:Key="ImageContextMenu">
                    <MenuItem
                        Command="{Binding CloseConnectionCommand}"
                        Header="{DynamicResource Stop}"
                        Icon="{StaticResource StopIcon}"
                        IsEnabled="{Binding IsInitialized}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding SaveCurrentFrameCommand}"
                        Header="{DynamicResource SaveCurrentImage}"
                        Icon="{StaticResource SaveIcon}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WriteableBitmap}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding SaveCurrentFrameAsCommand}"
                        Header="{DynamicResource SaveCurrentImageAs}"
                        Icon="{StaticResource SaveIcon}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WriteableBitmap}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                </ContextMenu>
            </Image.Resources>
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Margin" Value="0,4,0,0" />
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMouseEventEnabled}" Value="false">
                            <Setter Property="ContextMenu" Value="{StaticResource ImageContextMenu}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowService.IsFullscreen}" Value="true">
                            <Setter Property="Margin" Value="0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Grid
            Width="75"
            HorizontalAlignment="Right"
            VerticalAlignment="Top">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.Background>
                <SolidColorBrush Opacity=".2" Color="Black" />
            </Grid.Background>
            <TextBlock Margin="5" Foreground="White">
                <Run Text="{Binding CurrentFps, Mode=OneWay}" />
                <Run Text="FPS" />
            </TextBlock>
        </Grid>
        <Expander
            x:Name="SettingsExpander"
            Margin="0,0,75,0"
            Padding="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Background="{StaticResource WhiteBrush}"
            Focusable="False">
            <Expander.Style>
                <Style TargetType="Expander">
                    <Setter Property="ExpandDirection" Value="Up" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Expander">
                                <Grid Background="{StaticResource WhiteBrush}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="3" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        x:Name="ExpandSite"
                                        Height="0"
                                        BorderBrush="{StaticResource AccentColorBrush}"
                                        BorderThickness="1,0"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            Margin="{TemplateBinding Padding}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Cursor="{TemplateBinding Cursor}"
                                            UseLayoutRounding="False" />
                                    </Border>
                                    <Border
                                        Grid.Row="1"
                                        Width="{Binding ElementName=ExpandSite, Path=ActualWidth}"
                                        BorderBrush="Transparent">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseEventEnabled}" Value="false" />
                                                            <Condition Binding="{Binding IsMouseMovementEnabled}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="BorderThickness" Value="0,0,0,15" />
                                                        <Setter Property="Margin" Value="0,0,0,-15" />
                                                        <Setter Property="Panel.ZIndex" Value="100" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Rectangle x:Name="HeaderSite" Fill="{StaticResource AccentColorBrush}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="IsExpanded" Value="True" />
                                    </Trigger>
                                    <Trigger Property="IsExpanded" Value="true">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="ExpandSite"
                                                        Storyboard.TargetProperty="Height"
                                                        To="57"
                                                        Duration="0:0:0.25" />
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="ExpandSite"
                                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                                        To="1"
                                                        Duration="0:0:0.25" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="ExpandSite"
                                                        Storyboard.TargetProperty="Height"
                                                        To="0"
                                                        Duration="0:0:0.25" />
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="ExpandSite"
                                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                                        To="0"
                                                        Duration="0:0:0.25" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <Grid Height="47" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Vertical">
                    <TextBlock FontWeight="Bold" Text="{StaticResource Screen}" />
                    <ComboBox
                        Margin="0,5,0,0"
                        Focusable="False"
                        Style="{StaticResource ScreensComboBox}" />
                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Vertical">
                    <TextBlock FontWeight="Bold" Text="{StaticResource Quality}" />
                    <Slider
                        Margin="0,5,0,0"
                        Focusable="False"
                        Maximum="100"
                        Minimum="1"
                        Value="{Binding ImageQuality, Delay=100}" />
                </StackPanel>
                <StackPanel
                    Grid.Column="4"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <CheckBox
                        Content="{DynamicResource MouseClicks}"
                        Focusable="False"
                        IsChecked="{Binding IsMouseEventEnabled}" />
                    <CheckBox
                        Margin="0,5,0,0"
                        Content="{DynamicResource MouseMovement}"
                        Focusable="False"
                        IsChecked="{Binding IsMouseMovementEnabled}" />
                </StackPanel>
                <StackPanel
                    Grid.Column="6"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <CheckBox
                        Content="{DynamicResource KeyboardInputs}"
                        Focusable="False"
                        IsChecked="{Binding IsKeyboardInputEnabled}" />
                    <CheckBox
                        Margin="0,5,0,0"
                        Content="{DynamicResource ShowCursor}"
                        Focusable="False"
                        IsChecked="{Binding ShowCursor}" />
                </StackPanel>
                <Button
                    Grid.Column="8"
                    Margin="5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Command="{Binding CloseConnectionCommand}"
                    Content="{DynamicResource Close}"
                    Focusable="False" />
            </Grid>
        </Expander>
    </Grid>
</UserControl>