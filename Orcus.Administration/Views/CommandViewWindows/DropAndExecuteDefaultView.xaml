<UserControl
    x:Class="Orcus.Administration.Views.CommandViewWindows.DropAndExecuteDefaultView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commandViewModels="clr-namespace:Orcus.Administration.ViewModels.CommandViewModels;assembly=Orcus.Administration.ViewModels"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dropAndExecute="clr-namespace:Orcus.Administration.Commands.DropAndExecute;assembly=Orcus.Administration.Commands"
    xmlns:dropAndExecute1="clr-namespace:Orcus.Shared.Commands.DropAndExecute;assembly=Orcus.Shared"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:localExtensions="clr-namespace:Orcus.Administration.Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DataContext="{d:DesignInstance commandViewModels:DropAndExecuteViewModel}"
    d:DesignHeight="420"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Background="{StaticResource GrayBrush10}">
            <StackPanel Margin="10" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock>
                        <Run Text="{DynamicResource Execution}" /><Run Text=":" />
                    </TextBlock>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <RadioButton Content="{DynamicResource Execute}" IsChecked="{Binding ExecutionMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static dropAndExecute1:ExecutionMode.JustExecute}}" />
                        <RadioButton
                            Margin="10,0"
                            Content="{DynamicResource ExecuteHidden}"
                            IsChecked="{Binding ExecutionMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static dropAndExecute1:ExecutionMode.ExecuteHidden}}" />
                        <!--   <RadioButton Content="{DynamicResource ExecuteAndCapture}" IsChecked="{Binding ExecutionMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static dropAndExecute1:ExecutionMode.ExecuteAndCapture}}" /> -->
                        <RadioButton
                            Margin="10,0,0,0"
                            Content="{DynamicResource ExecuteOnSecondDesktopAndCapture}"
                            IsChecked="{Binding ExecutionMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static dropAndExecute1:ExecutionMode.ExecuteInSecondDesktopAndCapture}}" />
                    </StackPanel>
                </Grid>
                <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{DynamicResource Arguments}" /><Run Text=":" />
                    </TextBlock>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MaxWidth="500" />
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding Arguments}" />
                    </Grid>
                </Grid>
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <Image
                        Width="16"
                        Height=" 16"
                        VerticalAlignment="Center"
                        Source="{x:Static localExtensions:SystemImages.UacIcon}"
                        Style="{StaticResource DisableableImage}" />
                    <CheckBox
                        Margin="5,0,0,0"
                        Content="{DynamicResource ExecuteWithAdministratorPrivileges}"
                        IsChecked="{Binding ExecuteWithAdministratorPrivileges}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <Rectangle Grid.Row="1" Fill="{StaticResource GrayBrush9}" />
        <StackPanel
            Grid.Row="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Vertical">
            <ItemsControl ItemsSource="{Binding UploadedTasksCollection}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type dropAndExecute:UploadTask}">
                        <Grid Margin="0,2,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsUploaded}" Value="true">
                                                <Setter Property="BorderBrush" Value="#4F27ae60" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <controls:MetroProgressBar
                                        Grid.Column="0"
                                        Height="30"
                                        Background="{StaticResource GrayBrush10}"
                                        Maximum="1"
                                        Value="{Binding Progress}">
                                        <controls:MetroProgressBar.Style>
                                            <Style TargetType="controls:MetroProgressBar">
                                                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsUploaded}" Value="true">
                                                        <Setter Property="Foreground" Value="#4F27ae60" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MetroProgressBar.Style>
                                    </controls:MetroProgressBar>

                                    <RadioButton
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Content="{Binding Name}"
                                        GroupName="UploadTasks"
                                        IsChecked="{Binding ExecuteFile}">
                                        <RadioButton.Style>
                                            <Style BasedOn="{StaticResource MetroCheckBoxRadioButton}" TargetType="RadioButton">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UploadedTasksCollection.Count}" Value="1">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </RadioButton.Style>
                                    </RadioButton>
                                    <TextBlock
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UploadedTasksCollection.Count}" Value="1">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <Button
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.CancelUploadCommand}"
                                CommandParameter="{Binding}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="MinWidth" Value="0" />
                                        <Setter Property="MinHeight" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <iconPacks:PackIconMaterial
                                                        Width="10"
                                                        Height="10"
                                                        Background="Transparent"
                                                        Kind="Close">
                                                        <iconPacks:PackIconMaterial.Style>
                                                            <Style TargetType="iconPacks:PackIconMaterial">
                                                                <Setter Property="Foreground" Value="{StaticResource GrayBrush4}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Foreground" Value="#e74c3c" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </iconPacks:PackIconMaterial.Style>
                                                    </iconPacks:PackIconMaterial>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Border
                Width="500"
                Height="75"
                Margin="0,5,0,0"
                localExtensions:ControlExtensions.TriggerIsDragOver="True"
                AllowDrop="True"
                BorderBrush="{StaticResource GrayBrush8}"
                BorderThickness="1"
                PreviewDragEnter="DragAreaOnPreviewDragEnter"
                PreviewDrop="DragAreaOnPreviewDrop">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="{StaticResource GrayBrush10}" />
                        <Style.Triggers>
                            <Trigger Property="localExtensions:ControlExtensions.IsDragOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <iconPacks:PackIconMaterial
                        Width="32"
                        Height="32"
                        Foreground="{StaticResource GrayBrush2}"
                        Kind="ArrowUpBold" />
                    <TextBlock
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource GrayBrush2}">
                        <Run Text="{DynamicResource UploadAndExecuteFilesByDropping1}" />
                        <Hyperlink Command="{Binding SelectFilesCommand}"><Run Text="{DynamicResource UploadAndExecuteFilesByDropping2}" /></Hyperlink><Run Text="." />
                    </TextBlock>
                </StackPanel>
            </Border>
            <Button
                Margin="0,10,0,0"
                HorizontalAlignment="Center"
                Command="{Binding ExecuteCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MetroButton}" TargetType="Button">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ExecutionMode}" Value="{x:Static dropAndExecute1:ExecutionMode.JustExecute}">
                                <Setter Property="Content" Value="{DynamicResource Execute}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExecutionMode}" Value="{x:Static dropAndExecute1:ExecutionMode.ExecuteHidden}">
                                <Setter Property="Content" Value="{DynamicResource ExecuteHidden}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExecutionMode}" Value="{x:Static dropAndExecute1:ExecutionMode.ExecuteAndCapture}">
                                <Setter Property="Content" Value="{DynamicResource ExecuteAndCapture}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExecutionMode}" Value="{x:Static dropAndExecute1:ExecutionMode.ExecuteInSecondDesktopAndCapture}">
                                <Setter Property="Content" Value="{DynamicResource ExecuteOnSecondDesktopAndCapture}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ReadyToExecute}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>