using System;
using System.Diagnostics;
using System.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Orcus.Shared.Compression;

namespace Orcus.Test
{
    [TestClass]
    // ReSharper disable once InconsistentNaming
    public class LZFTests
    {
        [TestMethod, TestCategory("Compression")]
        public void SmallDataCompressionTest()
        {
            var sampleData = new byte[2048];
            var random = new Random();
            random.NextBytes(sampleData);

            var sw = Stopwatch.StartNew();
            var compressedData = LZF.Compress(sampleData, 0);
            Trace.WriteLine($"Compressed 2 kiB randomly generated bytes in {sw.ElapsedMilliseconds} ms");
            Assert.IsFalse(sampleData.SequenceEqual(compressedData));

            sw.Restart();
            var uncompressed = LZF.Decompress(compressedData, 0);
            Trace.WriteLine($"Decompressed 2 kiB randomly generated bytes in {sw.ElapsedMilliseconds} ms");
            Assert.IsTrue(sampleData.SequenceEqual(uncompressed));
        }

        [TestMethod, TestCategory("Compression")]
        public void LargeDataCompressionTest()
        {
            var sampleData = new byte[104857600]; //100 MiB
            var random = new Random();
            random.NextBytes(sampleData);

            var sw = Stopwatch.StartNew();
            var compressedData = LZF.Compress(sampleData, 0);
            Trace.WriteLine($"Compressed 100 MiB randomly generated bytes in {sw.ElapsedMilliseconds} ms");
            Assert.IsFalse(sampleData.SequenceEqual(compressedData));

            sw.Restart();
            var uncompressed = LZF.Decompress(compressedData, 0);
            Trace.WriteLine($"Decompressed 100 MiB randomly generated bytes in {sw.ElapsedMilliseconds} ms");
            Assert.IsTrue(sampleData.SequenceEqual(uncompressed));
        }
    }
}