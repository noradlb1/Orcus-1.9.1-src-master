<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments" xml:space="preserve">
    <value>Arguments</value>
  </data>
  <data name="Client_KillCommand_Description" xml:space="preserve">
    <value>Terminates the client process and don't let it respawn</value>
  </data>
  <data name="Client_KillCommand_Name" xml:space="preserve">
    <value>Kill</value>
  </data>
  <data name="Client_MakeAdminCommand_Description" xml:space="preserve">
    <value>Attempt to restart the client process with elevated privileges. If that fails, the client continues running with user permissions</value>
  </data>
  <data name="Client_MakeAdminCommand_Name" xml:space="preserve">
    <value>Request Administrator Privileges</value>
  </data>
  <data name="Client_PasswordRecoveryCommand_Description" xml:space="preserve">
    <value>Recover passwords and cookies on the client's pc</value>
  </data>
  <data name="Client_PasswordRecoveryCommand_Name" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
  <data name="Client_RequestKeyLogCommand_Description" xml:space="preserve">
    <value>Force the client to send the current key log</value>
  </data>
  <data name="Client_RequestKeyLogCommand_Name" xml:space="preserve">
    <value>Request Key Log</value>
  </data>
  <data name="Client_UninstallCommand_Description" xml:space="preserve">
    <value>Uninstall the client, remove all dependencies and remove all files</value>
  </data>
  <data name="Client_UninstallCommand_Name" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="ArgumentsDescription" xml:space="preserve">
    <value>Arguments the file should be executed with</value>
  </data>
  <data name="Client_UpdateCommand_Description" xml:space="preserve">
    <value>Uninstall the current client, execute the new file and terminate the client</value>
  </data>
  <data name="Client_UpdateCommand_Name" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Client_UpdateCommand_PathDescription" xml:space="preserve">
    <value>The executable the file should be updated with</value>
  </data>
  <data name="WarningFileAbove5MiB" xml:space="preserve">
    <value>Die Datei {0} hat eine Dateigröße über 5 MiB. Bitte beachten Sie, dass diese Datei in den Arbeitsspeicher geladen und an jeden Client übertragen werden muss, was lange dauern kann, wenn dies eine große Anzahl an Clients betrifft. Möchten Sie fortfahren?</value>
    <comment>0: the name of the file</comment>
  </data>
  <data name="Client_UpdateFromUrlCommand_Description" xml:space="preserve">
    <value>Download the file from the url, uninstall the current client, execute the new file and terminate the client</value>
  </data>
  <data name="Client_UpdateFromUrlCommand_DownloadUrl" xml:space="preserve">
    <value>Download URL</value>
  </data>
  <data name="Client_UpdateFromUrlCommand_DownloadUrl_Description" xml:space="preserve">
    <value>The http(s) url of the file which should be downloaded</value>
  </data>
  <data name="Client_UpdateFromUrlCommand_FileHash" xml:space="preserve">
    <value>File Hash</value>
  </data>
  <data name="Client_UpdateFromUrlCommand_FileHash_Description" xml:space="preserve">
    <value>The SHA256 hash value of the file. Leave empty if no hash comparison is required.</value>
  </data>
  <data name="Client_UpdateFromUrlCommand_Name" xml:space="preserve">
    <value>Update (Url)</value>
  </data>
  <data name="Common" xml:space="preserve">
    <value>Common</value>
  </data>
  <data name="ExecutableFilesFilter" xml:space="preserve">
    <value>Executable Files|*.exe</value>
  </data>
  <data name="FileCheck" xml:space="preserve">
    <value>File Check</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="PathCannotBeEmpty" xml:space="preserve">
    <value>The path cannot be empty</value>
  </data>
  <data name="TheFileDoesnotExist" xml:space="preserve">
    <value>The file "{0}" does not exist</value>
    <comment>0: the name of the file</comment>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Aktualisierung</value>
  </data>
  <data name="UrlCannotBeEmpty" xml:space="preserve">
    <value>Die URL darf nicht leer sein</value>
  </data>
  <data name="InvalidSHA256HashValueHex" xml:space="preserve">
    <value>Invalid hash value. Please make sure that you use a SHA256 hash formatted as hexadecimal (64 chars)</value>
  </data>
  <data name="Computer_WakeOnLanCommand_Name" xml:space="preserve">
    <value>Wake On Lan</value>
  </data>
  <data name="Computer_WakeOnLanCommand_Description" xml:space="preserve">
    <value>Send magic packets to the clients to wake them up. Only works if the clients are in the same network like the server.</value>
  </data>
  <data name="Interaction_OpenTextInNotepadCommand_Name" xml:space="preserve">
    <value>Open Text in Notepad</value>
  </data>
  <data name="Interaction_OpenTextInNotepadCommand_Description" xml:space="preserve">
    <value>Open the given text in Notepad so the user can read and copy it.</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Interaction_OpenTextInNotepadCommand_Text_Description" xml:space="preserve">
    <value>The text displayed in notepad.</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_ValidateInput_TextCannotBeEmpty" xml:space="preserve">
    <value>The text cannot be empty</value>
  </data>
  <data name="Interaction_OpenTextInNotepadCommand_Title_Description" xml:space="preserve">
    <value>The title of the window of notepad.</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Title_Description" xml:space="preserve">
    <value>The title to display on the balloon tooltip.</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Text_Description" xml:space="preserve">
    <value>The text to display on the balloon tooltip.</value>
  </data>
  <data name="Timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Timeout_Description" xml:space="preserve">
    <value>The time period, in milliseconds, the balloon tip should display.</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Icon_Description" xml:space="preserve">
    <value>Specifies the icon for the balloon tooltip.</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Name" xml:space="preserve">
    <value>Show Balloon Tooltip</value>
  </data>
  <data name="Interaction_ShowBalloonTooltipCommand_Description" xml:space="preserve">
    <value>Show a simple balloon tooltip message</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Name" xml:space="preserve">
    <value>Open Message Box</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Description" xml:space="preserve">
    <value>Open a message box. The button which was pressed by the user will be returned</value>
  </data>
  <data name="ShowMessageBoxCommand_ValidateInput_TextCannotBeEmpty" xml:space="preserve">
    <value>The text cannot be empty</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Text_Description" xml:space="preserve">
    <value>The text to display in the message box.</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Title_Description" xml:space="preserve">
    <value>The text to display in the title bar of the message box.</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Buttons" xml:space="preserve">
    <value>Buttons</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Buttons_Description" xml:space="preserve">
    <value>Specifies which buttons to display in the message box.</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_Icon_Description" xml:space="preserve">
    <value>Specifies which icon to display in the message box.</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_DefaultButton" xml:space="preserve">
    <value>Default Button</value>
  </data>
  <data name="Interaction_ShowMessageBoxCommand_DefaultButton_Description" xml:space="preserve">
    <value>Specifies the default button for the message box.</value>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="System_ChangeComputerStateCommand_Name" xml:space="preserve">
    <value>Change Computer State</value>
  </data>
  <data name="System_ChangeComputerStateCommand_Description" xml:space="preserve">
    <value>Shutdown, restart or log off the computer</value>
  </data>
  <data name="System_ChangeComputerStateCommand_ComputerState" xml:space="preserve">
    <value>Computer State</value>
  </data>
  <data name="System_ChangeComputerStateCommand_ComputerState_Description" xml:space="preserve">
    <value>The action which should be done</value>
  </data>
  <data name="System_ChangeWallpaperCommand_Name" xml:space="preserve">
    <value>Change Desktop Wallpaper</value>
  </data>
  <data name="System_ChangeWallpaperCommand_Description" xml:space="preserve">
    <value>Change the desktop wallpaper of the computer to an image from a url</value>
  </data>
  <data name="System_ChangeWallpaperCommand_ValidateInput_WallpaperUrlCannotBeEmpty" xml:space="preserve">
    <value>The wallpaper url cannot be empty</value>
  </data>
  <data name="System_ChangeWallpaperCommand_WallpaperStyle" xml:space="preserve">
    <value>Wallpaper Style</value>
  </data>
  <data name="System_ChangeWallpaperCommand_WallpaperStyle_Description" xml:space="preserve">
    <value>Determines how the desktop bitmap is displayed on the desktop</value>
  </data>
  <data name="System_ChangeWallpaperCommand_WallpaperUrl" xml:space="preserve">
    <value>Wallpaper URL</value>
  </data>
  <data name="System_ChangeWallpaperCommand_WallpaperUrl_Description" xml:space="preserve">
    <value>The http url to the wallpaper</value>
  </data>
  <data name="System_DownloadAndExecuteCommand_Name" xml:space="preserve">
    <value>Download and Execute</value>
  </data>
  <data name="System_DownloadAndExecuteCommand_Description" xml:space="preserve">
    <value>Download the given file from the Orcus Server and execute it</value>
  </data>
  <data name="System_DownloadAndExecuteCommand_Path_Description" xml:space="preserve">
    <value>The path to the file which should be executed on the remote system</value>
  </data>
  <data name="System_DownloadAndExecuteCommand_ExecuteUsingService" xml:space="preserve">
    <value>Execute using Service</value>
  </data>
  <data name="System_DownloadAndExecuteCommand_ExecuteUsingService_Description" xml:space="preserve">
    <value>Execute the file using the Orcus Service if it is available</value>
  </data>
  <data name="System_DownloadAndExecuteFromUrlCommand_Name" xml:space="preserve">
    <value>Download and Execute from Url</value>
  </data>
  <data name="System_DownloadAndExecuteFromUrlCommand_Description" xml:space="preserve">
    <value>Download a file from an url and execute it</value>
  </data>
  <data name="System_ExecuteProcessCommand_Name" xml:space="preserve">
    <value>Execute file</value>
  </data>
  <data name="System_ExecuteProcessCommand_Description" xml:space="preserve">
    <value>Execute the file of the given file path.</value>
  </data>
  <data name="InvalidFilename" xml:space="preserve">
    <value>Invalid file name</value>
  </data>
  <data name="System_ExecuteProcessCommand_ValidateInput_VerbDoesNotExist" xml:space="preserve">
    <value>The verb does not seem to be available on this computer. Do you want to continue?</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="System_ExecuteProcessCommand_FileName_Description" xml:space="preserve">
    <value>The application to start</value>
  </data>
  <data name="System_ExecuteProcessCommand_Arguments_Description" xml:space="preserve">
    <value>The command-line arguments to use when starting the application</value>
  </data>
  <data name="System_ExecuteProcessCommand_WorkingDirectory" xml:space="preserve">
    <value>Working Directory</value>
  </data>
  <data name="System_ExecuteProcessCommand_WorkingDirectory_Description" xml:space="preserve">
    <value>The working directory for the process. That has no effect if Shell Execute is true</value>
  </data>
  <data name="Visibility" xml:space="preserve">
    <value>Sichtbarkeit</value>
  </data>
  <data name="System_ExecuteProcessCommand_ShellExecute" xml:space="preserve">
    <value>Shell Execute</value>
  </data>
  <data name="System_ExecuteProcessCommand_ShellExecute_Description" xml:space="preserve">
    <value>Use the operating system shell to start the process.</value>
  </data>
  <data name="System_ExecuteProcessCommand_Verb" xml:space="preserve">
    <value>Verb</value>
  </data>
  <data name="System_ExecuteProcessCommand_Verb_Description" xml:space="preserve">
    <value>The verb to use when opening the file</value>
  </data>
  <data name="System_ExecuteProcessCommand_CreateNoWindow" xml:space="preserve">
    <value>Create No Window</value>
  </data>
  <data name="System_ExecuteProcessCommand_CreateNoWindow_Description" xml:space="preserve">
    <value>Start the process without creating a new window. Only affects console.</value>
  </data>
  <data name="System_ExecuteProcessCommand_WindowStyle" xml:space="preserve">
    <value>Window Style</value>
  </data>
  <data name="System_ExecuteProcessCommand_WindowStyle_Description" xml:space="preserve">
    <value>The window style the application should adapt to.</value>
  </data>
  <data name="System_ExecuteProcessCommand_Administrator" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="System_ExecuteProcessCommand_Administrator_Description" xml:space="preserve">
    <value>Execute the process with administrator privileges. This won't have an effect if the verb is set.</value>
  </data>
  <data name="System_OpenWebsiteCommand_Name" xml:space="preserve">
    <value>Open Website</value>
  </data>
  <data name="System_OpenWebsiteCommand_Description" xml:space="preserve">
    <value>Open a website x times on the computer</value>
  </data>
  <data name="System_OpenWebsiteCommand_ValidateInput_InvalidUrl" xml:space="preserve">
    <value>This is not a valid url. Open anyway?</value>
  </data>
  <data name="System_OpenWebsiteCommand_ValidateInput_Times" xml:space="preserve">
    <value>Please use a positive not zero value for the Times property</value>
  </data>
  <data name="System_OpenWebsiteCommand_WebsiteUrl" xml:space="preserve">
    <value>Website URL</value>
  </data>
  <data name="System_OpenWebsiteCommand_WebsiteUrl_Description" xml:space="preserve">
    <value>The url to the website</value>
  </data>
  <data name="System_OpenWebsiteCommand_Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="System_OpenWebsiteCommand_Amount_Description" xml:space="preserve">
    <value>The amount of website instances</value>
  </data>
  <data name="System_SystemLockCommand_Name" xml:space="preserve">
    <value>Lock System</value>
  </data>
  <data name="System_SystemLockCommand_Description" xml:space="preserve">
    <value>Lock the computer system and prevent any user interation until the command is stopped</value>
  </data>
  <data name="System_SystemLockCommand_Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="System_SystemLockCommand_Message_Description" xml:space="preserve">
    <value>Display a message</value>
  </data>
  <data name="System_SystemLockCommand_DisableUserInput" xml:space="preserve">
    <value>Disable user input</value>
  </data>
  <data name="System_SystemLockCommand_DisableUserInput_Description" xml:space="preserve">
    <value>Disable the mouse and keyboard. This feature requires administrator privileges.</value>
  </data>
  <data name="Protection" xml:space="preserve">
    <value>Protection</value>
  </data>
  <data name="System_SystemLockCommand_PreventClosing" xml:space="preserve">
    <value>Prevent Closing</value>
  </data>
  <data name="System_SystemLockCommand_PreventClosing_Description" xml:space="preserve">
    <value>Prevent the key combination Alt+F4 and the close button in the taskbar.</value>
  </data>
  <data name="System_SystemLockCommand_Topmost" xml:space="preserve">
    <value>Topmost</value>
  </data>
  <data name="System_SystemLockCommand_Topmost_Description" xml:space="preserve">
    <value>Makes the window overlapping other windows.</value>
  </data>
  <data name="System_SystemLockCommand_PeriodicallySetTopWindow" xml:space="preserve">
    <value>Periodically bring to front</value>
  </data>
  <data name="System_SystemLockCommand_PeriodicallySetTopWindow_Description" xml:space="preserve">
    <value>It may be possible that the window will be overlapped by other topmost windows. This option prevents that.</value>
  </data>
  <data name="System_SystemLockCommand_DisableTaskManager" xml:space="preserve">
    <value>Disable Task Manager</value>
  </data>
  <data name="System_SystemLockCommand_DisableTaskManager_Description" xml:space="preserve">
    <value>Disable the Windows Task Manager to prevent the user from killing the process. This feature requires administrator privileges.</value>
  </data>
  <data name="System_SystemLockCommand_Background" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="System_SystemLockCommand_Background_Description" xml:space="preserve">
    <value>The color of the lock screen background.</value>
  </data>
  <data name="System_SystemLockCommand_RotateScreen" xml:space="preserve">
    <value>Rotate Screen</value>
  </data>
  <data name="System_SystemLockCommand_RotateScreen_Description" xml:space="preserve">
    <value>Rotate the screen to make it difficult for the user to navigate. The screen will be restored when the command is stopped.</value>
  </data>
  <data name="System_SystemLockCommand_DifferentDesktop" xml:space="preserve">
    <value>Different Desktop</value>
  </data>
  <data name="System_SystemLockCommand_DifferentDesktop_Description" xml:space="preserve">
    <value>Create a new desktop and set it as the default desktop. The original desktop will be restored when the command is stopped.</value>
  </data>
  <data name="System_SystemLockCommand_CloseWindows" xml:space="preserve">
    <value>Close windows</value>
  </data>
  <data name="System_SystemLockCommand_CloseWindows_Description" xml:space="preserve">
    <value>Constantly close other windows on the new desktop. That won't affect any windows the user did open in the default desktop.</value>
  </data>
  <data name="Desktop" xml:space="preserve">
    <value>Desktop</value>
  </data>
</root>